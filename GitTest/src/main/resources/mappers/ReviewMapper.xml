<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.scmaster.gittest.dao.ReviewMapper">

	<!-- Review 리스트 가져오기 --> 
	<select id="readReview" resultType="HashMap" parameterType="Review">
		SELECT
			REV_SQ
			, USER_ID
			, CONTENT_ID
			, REV_TXT
			, INP_YMD
			, to_char(UPD_YMD,'YYYY-MM-DD HH24:MI:SS') as "UPD_YMD"
		FROM 
			SM_REVIEW_TB
		where 
		CONTENT_ID = #{CONTENT_ID}
		ORDER BY
			INP_YMD DESC , REV_SQ
	</select>
	
	<!-- 페이징 관련 리뷰글수 -->
	<select id="tCount" parameterType="String" resultType="int">
		select count(*)
		from SM_REVIEW_TB
		where CONTENT_ID = #{CONTENT_ID}
	</select>
	

	<!-- 2) Review 저장 -->
	<insert id="writeReview" parameterType="Review">
		INSERT INTO SM_REVIEW_TB
		(
			REV_SQ
			, USER_ID
			, CONTENT_ID
			, REV_TXT
			, INP_YMD
			, UPD_YMD
		)
		VALUES
		(
			SM_REVIEW_TB_REV_SQ.nextval
			, #{USER_ID}
			, #{CONTENT_ID}
			, #{REV_TXT}
			, sysdate
			, sysdate
			
		)
	</insert>
	<update id="updateReview" parameterType="Review">
	update
		SM_REVIEW_TB
		set 
		REV_TXT = #{REV_TXT}	
		,UPD_YMD = sysdate
	where 
		REV_SQ=#{REV_SQ}
	and	
		CONTENT_ID = #{CONTENT_ID}
	and 
		USER_ID=#{USER_ID}
	</update>
	
	<delete id="deleteReview" parameterType="Review">
	delete
		from
			SM_REVIEW_TB
		where
			REV_SQ=#{REV_SQ}
		and	
			CONTENT_ID = #{CONTENT_ID}
		and 
			USER_ID=#{USER_ID}
			
	</delete>

</mapper>
